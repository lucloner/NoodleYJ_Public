<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FSLib.IPMessager</name>
    </assembly>
    <members>
        <member name="T:BlowfishNET.BlowfishCBC">
            <summary>Blowfish CBC implementation.</summary>
            <remarks>Use this class to encrypt or decrypt byte arrays or a single blocks
            with Blowfish in CBC (Cipher Block Block Chaining) mode. This is the recommended
            way to use Blowfish.NET, unless certain requirements (e.g. moving block without
            decryption) exist.
            </remarks>
        </member>
        <member name="P:BlowfishNET.BlowfishCBC.IV">
            <summary>The current initialization vector (IV), which measures one block.</summary>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.SetIV(System.Byte[],System.Int32)">
            <summary>Sets the initialization vector (IV) with an offset.</summary>
            <param name="buf">The buffer containing the new IV material.</param>
            <param name="ofs">Where the IV material starts.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.GetIV(System.Byte[],System.Int32)">
            <summary>Gets the current IV material (of the size of one block).</summary>
            <param name="buf">The buffer to copy the IV to.</param>
            <param name="ofs">Where to start copying.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>Default constructor.</summary>
            <remarks>The IV needs to be assigned after the instance has been created!</remarks>
            <see cref="M:BlowfishNET.BlowfishECB.Initialize(System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.#ctor">
            <summary>Zero key constructor.</summary>
            <remarks>After construction you need to initialize the instance and then apply the IV.</remarks>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.Invalidate">
            <see cref="M:BlowfishNET.BlowfishECB.Invalidate"/>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.EncryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)">
            <see cref="M:BlowfishNET.BlowfishECB.EncryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.DecryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)">
            <see cref="M:BlowfishNET.BlowfishECB.DecryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.Encrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <see cref="M:BlowfishNET.BlowfishECB.Encrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.Decrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <see cref="M:BlowfishNET.BlowfishECB.Decrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishCBC.Clone">
            <see cref="M:BlowfishNET.BlowfishECB.Clone"/>
        </member>
        <member name="T:BlowfishNET.BlowfishECB">
            <summary>Blowfish ECB implementation.</summary>
            <remarks>Use this class to encrypt or decrypt byte arrays or a single
            block with Blowfish in the ECB (Electronic Code Book) mode. The key
            length can be flexible from zero up to 56 bytes.</remarks>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.MAX_KEY_LENGTH">
            <summary>The maximum and recommended key size in bytes.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.BLOCK_SIZE">
            <summary>The block size in bytes.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.pbox">
            <summary>Runtime p-box.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox1">
            <summary>Runtime s-box #1.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox2">
            <summary>Runtime s-box #2.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox3">
            <summary>Runtime s-box #3.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.sbox4">
            <summary>Runtime s-box #4.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.block">
            <summary>Single block cache.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.isWeakKey">
            <summary>1 if a weak key was detected, 0 if not and -1 if it hasn't
            been determined yet.</summary>
        </member>
        <member name="P:BlowfishNET.BlowfishECB.IsWeakKey">
            <summary>To check if the key used is weak.</summary>
            <remarks>If a key is weak it means that eventually an attack is easier to apply than
            just a simple brute force on keys. Due to the randomness in the key setup process
            such a case however is unlikely to happen, yet checking after each setup might still
            be the preferred way. In the case of a weak key detected a simple recreation with a
            different key (or just a different salt value) is the recommended solution. For
            performance reasons we don't do the weak key check during the initialization, but on
            demand only, and then only once to determine the flag.</remarks>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Initialize(System.Byte[],System.Int32,System.Int32)">
            <summary>Resets the instance with new or initial key material. Allows the switch of
            keys at runtime without any new internal object allocation.</summary>
            <param name="key">The buffer with the key material.</param>
            <param name="ofs">Position at which the key material starts in the buffer.</param>
            <param name="len">Size of the key material, up to MAX_KEY_LENGTH bytes.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.#ctor">
            <summary>Zero constructor, properly initializes an instance. Initialize afterwards
            to set up a valid key!</summary>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.#ctor(System.Byte[],System.Int32,System.Int32)">
            <see cref="M:BlowfishNET.BlowfishECB.Initialize(System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Invalidate">
            <summary> Deletes all internal data structures and invalidates this instance.</summary>
            <remarks>Call this method as soon as the work with a particular instance is done,
            so no sensitive translated key material remains. The instance is invalid after this
            call and usage can lead to unexpected results!</remarks> 
        </member>
        <member name="M:BlowfishNET.BlowfishECB.RunSelfTest">
            <summary>To execute a selftest.</summary>
            <remarks>Call this method to make sure that the implemenation is able to produce
            valid output according to the specification. This should usually be done at process
            startup time, before the usage of this class and its inherited variants.</remarks>
            <returns>True if the selftest passed or false is it failed. In such a case you must
            not use the cipher to avoid data corruption!</returns>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.EncryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)">
            <summary>Encrypts a single block.</summary>
            <param name="hi">The high 32bit word of the block.</param>
            <param name="lo">The low 32bit word of the block.</param>
            <param name="outHi">Where to put the encrypted high word.</param>
            <param name="outLo">Where to put the encrypted low word.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.DecryptBlock(System.UInt32,System.UInt32,System.UInt32@,System.UInt32@)">
            <summary>Decrypts a single block.</summary>
            <param name="hi">The high 32bit word of the block.</param>
            <param name="lo">The low 32bit word of the block.</param>
            <param name="outHi">Where to put the decrypted high word.</param>
            <param name="outLo">Where to put the decrypted low word.</param>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Encrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>Encrypts byte buffers.</summary>
            <remarks>Use this method to encrypt bytes from one array to another one. You can also 
            use the same array for input and output. Note that the number of bytes must be adjusted
            to the block size of the algorithm. Overlapping bytes will not be encrypted. No check for
            buffer overflows are made.</remarks>
            <param name="dataIn">The input buffer.</param>
            <param name="posIn">Where to start reading in the input buffer.</param>
            <param name="dataOut">The output buffer.</param>
            <param name="posOut">Where to start writing to the output buffer.</param>
            <param name="count">The number ob bytes to encrypt.</param>
            <returns>The number of bytes processed.</returns>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Decrypt(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>Decrypts single bytes.</summary>
            <remarks>Use this method to decrypt bytes from one array to another one. You can also use
            the same array for input and output. Note that the number of bytes must be adjusted to the
            block size of the algorithm. Overlapping bytes will not be decrypted. No check for buffer
            overflows are made.</remarks>
            <param name="dataIn">The input buffer.</param>
            <param name="posIn">Where to start reading in the input buffer.</param>
            <param name="dataOut">The output buffer.</param>
            <param name="posOut">Where to start writing to the output buffer.</param>
            <param name="count">Number ob bytes to decrypt.</param>
            <returns>The number of bytes processed.</returns>
        </member>
        <member name="M:BlowfishNET.BlowfishECB.Clone">
            <remarks>Cloning can be very useful if you need multiple instances all using
            the same key, since the expensive cipher setup will be bypassed.</remarks>
            <see cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.PBOX_INIT">
            <summary>The P-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_1">
            <summary>The first S-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_2">
            <summary>The second S-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_3">
            <summary>The third S-box initialization data.</summary>
        </member>
        <member name="F:BlowfishNET.BlowfishECB.SBOX_INIT_4">
            <summary>The fourth S-box initialization data.</summary>
        </member>
        <member name="T:FSLib.IPMessager.Core.CommandExecutor">
            <summary>
            负责命令的解析等操作
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.#ctor(FSLib.IPMessager.IPMClient)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.Init">
            <summary>
            初始化所有对象，并初始化类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.IsInitialized">
            <summary>
            获得底层是否成功初始化的状态
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendEntryMessage">
            <summary>
            发送上线消息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendAbsenceMessage">
            <summary>
            发送在线状态变化信息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendExitEntryMessage">
            <summary>
            发送下线消息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendReadMessageSignal(FSLib.IPMessager.Entity.Message)">
            <summary>
            发送确认打开消息的包
            </summary>
            <param name="m">原始数据包</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendCommand(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="host">主机对象</param>
            <param name="cmd">命令</param>
            <param name="options">选项</param>
            <param name="msg">消息</param>
            <param name="extMsg">扩展消息</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendCommand(System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="endPoint">主机地址</param>
            <param name="cmd">命令</param>
            <param name="options">选项</param>
            <param name="msg">消息</param>
            <param name="extMsg">扩展消息</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendCommand(FSLib.IPMessager.Entity.Host,System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="host">主机对象</param>
            <param name="endPoint">主机地址</param>
            <param name="cmd">命令</param>
            <param name="options">选项</param>
            <param name="msg">消息</param>
            <param name="extMsg">扩展消息</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendCommand(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="host">主机</param>
            <param name="cmd">命令</param>
            <param name="options">选项</param>
            <param name="msg">消息</param>
            <param name="extMsg">扩展消息</param>
            <param name="isBroadCast">是否是广播</param>
            <param name="sendCheck">是否需要确认收到</param>
            <param name="noAddList">是否忽略到主机列表</param>
            <param name="noLog">是否不记录日志</param>
            <param name="isAutoRet">是否是自动回复</param>
            <param name="isEncrypt">是否是加密信息</param>
            <param name="isSecret">是否需要阅读确认</param>
            <param name="noPopup">是否不自动弹出</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendCommand(System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="remoteEndPoint">远程主机地址</param>
            <param name="cmd">命令</param>
            <param name="options">选项</param>
            <param name="msg">消息</param>
            <param name="extMsg">扩展消息</param>
            <param name="isBroadCast">是否是广播</param>
            <param name="sendCheck">是否需要确认收到</param>
            <param name="noAddList">是否忽略到主机列表</param>
            <param name="noLog">是否不记录日志</param>
            <param name="isAutoRet">是否是自动回复</param>
            <param name="isEncrypt">是否是加密信息</param>
            <param name="isSecret">是否需要阅读确认</param>
            <param name="noPopup">是否不自动弹出</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendCommand(FSLib.IPMessager.Entity.Host,System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="host">主机</param>
            <param name="remoteEndPoint">远程主机地址</param>
            <param name="cmd">命令</param>
            <param name="options">选项</param>
            <param name="msg">消息</param>
            <param name="extMsg">扩展消息</param>
            <param name="isBroadCast">是否是广播</param>
            <param name="sendCheck">是否需要确认收到</param>
            <param name="noAddList">是否忽略到主机列表</param>
            <param name="noLog">是否不记录日志</param>
            <param name="isAutoRet">是否是自动回复</param>
            <param name="isEncrypt">是否是加密信息</param>
            <param name="isSecret">是否需要阅读确认</param>
            <param name="noPopup">是否不自动弹出</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.GetVersion(FSLib.IPMessager.Entity.Host)">
            <summary>
            查询客户端版本
            </summary>
            <param name="host">客户端</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendMessageOpenedSignal(FSLib.IPMessager.Entity.Host,System.UInt64)">
            <summary>
            发送消息打开确认包
            </summary>
            <param name="host">远程主机</param>
            <param name="packageNo">包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendReleaseFilesSignal(FSLib.IPMessager.Entity.Host,System.UInt64)">
            <summary>
            发送文件取消接收消息
            </summary>
            <param name="host">远程主机</param>
            <param name="packageNo">包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendTextMessage(FSLib.IPMessager.Entity.Host,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            向用户发送消息
            </summary>
            <param name="host">主机</param>
            <param name="content">消息内容</param>
            <param name="isHtml">是否HTML格式消息</param>
            <param name="isRtf">是否RTF格式消息</param>
            <param name="packed">是否封包</param>
            <param name="password">是否加密</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendTextMessage(FSLib.IPMessager.Entity.Host,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            向用户发送消息
            </summary>
            <param name="host">主机</param>
            <param name="content">消息内容</param>
            <param name="isHtml">是否HTML格式消息</param>
            <param name="isRtf">是否RTF格式消息</param>
            <param name="packed">是否封包</param>
            <param name="isAutoReply">是否是自动回复信息</param>
            <param name="password">是否加密</param>
            <param name="attachContent">附件内容</param>
            <param name="isBoardCast">是否是广播</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.SendTextMessage(System.UInt64,FSLib.IPMessager.Entity.Host,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            向用户发送消息
            </summary>
            <param name="packageID">消息包ID</param>
            <param name="host">主机</param>
            <param name="content">消息内容</param>
            <param name="isHtml">是否HTML格式消息</param>
            <param name="isRtf">是否RTF格式消息</param>
            <param name="packed">是否封包</param>
            <param name="isAutoReply">是否是自动回复信息</param>
            <param name="password">是否加密</param>
            <param name="attachContent">附件内容</param>
            <param name="isBoardCast">是否是广播</param>
            <returns>发出去的消息包编号</returns>
        </member>
        <member name="E:FSLib.IPMessager.Core.CommandExecutor.MessageProcessing">
            <summary>
            消息将要处理事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.OnMessageProcessing(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            触发消息将要处理的事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.CommandExecutor.MessageProcessed">
            <summary>
            消息处理后触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.OnMessageProcessed(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            触发消息已处理的事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.CommandExecutor.TextMessageReceiving">
            <summary>
            收到文本消息事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.OnTextMessageReceiving(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            触发收到文本消息事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.CommandExecutor.TextMessageReceived">
            <summary>
            收到文本消息事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.OnTextMessageReceived(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            触发收到文本消息事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.CommandExecutor.TextMessageArrived">
            <summary>
            消息已经投递到对方事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.OnTextMessageArrived(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            触发消息已经投递到对方事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.CommandExecutor.TextMessageOpened">
            <summary>
            对方消息已经打开事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.OnTextMessageOpened(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            触发消息对方消息已经打开事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.Config">
            <summary>
            配置类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.Client">
            <summary>
            UDP通信类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.LivedHost">
            <summary>
            网络在线主机状态
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.MessageProxy">
            <summary>
            消息发送和代理类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.BroadCastEndPoint">
            <summary>
            广播远程节点
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.FileTaskManager">
            <summary>
            文件传输管理器
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.CommandExecutor.FileTaskModule">
            <summary>
            文件线程
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.CommandExecutor.Dispose">
            <summary>
            Dispose模式支持
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Core.FileReceivedEventArgs">
            <summary>
            包含收到的文件的数据
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileReceivedEventArgs.#ctor(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Entity.Message,FSLib.IPMessager.Entity.FileTaskInfo)">
            <summary>
            创建 <see cref="T:FSLib.IPMessager.Core.FileReceivedEventArgs" /> 的新实例
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Core.FileReceiveRequiredEventArgs">
            <summary>
            请求接收文件事件-用文件管理器和TCP线程调度信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileReceiveRequiredEventArgs.Task">
            <summary>
            任务信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileReceiveRequiredEventArgs.Item">
            <summary>
            任务项目
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileReceiveRequiredEventArgs.IsHandled">
            <summary>
            是否已经处理
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileReceiveRequiredEventArgs.#ctor(FSLib.IPMessager.Entity.FileTaskInfo,FSLib.IPMessager.Entity.FileTaskItem)">
            <summary>
            创建一个新的 FileReceiveEventArgs 对象.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Core.FileTaskEventArgs">
            <summary>
            任务参数信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.TaskInfo">
            <summary>
            关联的任务信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.TaskItem">
            <summary>
            关联的任务条目
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.IsHandled">
            <summary>
            是否已经处理了
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.Host">
            <summary>
            远程主机信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.PackageID">
            <summary>
            包ID
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.Direction">
            <summary>
            文件传输的方向
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskEventArgs.TaskList">
            <summary>
            发送文件时有效，等待发送的文件列表
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskEventArgs.#ctor(FSLib.IPMessager.Entity.FileTaskInfo,FSLib.IPMessager.Entity.FileTaskItem)">
            <summary>
            创建 FileTaskEventArgs class 的新实例
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskEventArgs.#ctor(FSLib.IPMessager.Entity.FileTaskInfo)">
            <summary>
            创建 FileTaskEventArgs class 的新实例
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Core.FileTaskManager">
            <summary>
            管理文件传输任务
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.#ctor(FSLib.IPMessager.Entity.Config)">
            <summary>
            创建 FileTaskManager class 的新实例
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskManager.SendTask">
            <summary>
            发送列表
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Core.FileTaskManager._activeSendItems">
            <summary>
            活动的文件发送任务
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Core.FileTaskManager._sendStateUpdateTimer">
            <summary>
            发送状态更新计时器
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.SendTaskAdded">
            <summary>
            发送任务已添加
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnSendTaskAdded(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发发送任务已添加事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.SendTaskFinished">
            <summary>
            发送任务完成
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnSendTaskFinished(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发发送任务完成事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.SendItemStart">
            <summary>
            开始发送任务
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnSendItemStart(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发发送任务开始事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.TaskItemStateChanged">
            <summary>
            传输状态变化
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnTaskItemStateChanged(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发发送状态变化事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.TaskItemProgressChanged">
            <summary>
            传输进度变化
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnTaskItemProgressChanged(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发发送进度变化事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.AddSendTask(FSLib.IPMessager.Entity.FileTaskInfo)">
            <summary>
            添加文件传输任务
            </summary>
            <param name="task">任务信息</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.QuerySendTask(System.UInt64,System.Int32,System.Net.IPAddress)">
            <summary>
            查询任务信息
            </summary>
            <param name="packageId"></param>
            <param name="taskIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.MarkSendTaskItemState(FSLib.IPMessager.Entity.FileTaskItem,FSLib.IPMessager.Entity.FileTaskItemState)">
            <summary>
            标记一个任务项目状态，并检查任务是否完成
            </summary>
            <param name="item">任务条目</param>
            <param name="state">状态</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.InitSendManager">
            <summary>
            初始化发送
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.RaiseSendStatusUpdateEvent">
            <summary>
            触发发送状态更新事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.EnsureSendStateUpdateTimerState">
            <summary>
            确认发送定时器是否可用
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskManager.ReceiveTask">
            <summary>
            接收列表
            </summary>
            <value>这个队列维护的是正在执行或等待执行的文件接收列表，已经完成的请求将会自动从列表中移除</value>
        </member>
        <member name="P:FSLib.IPMessager.Core.FileTaskManager.Config">
            <summary>
            配置类
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Core.FileTaskManager.activeReceiveItems">
            <summary>
            活动的文件发送任务
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Core.FileTaskManager.receiveStateUpdateTimer">
            <summary>
            发送状态更新计时器
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.ReceiveTaskAdded">
            <summary>
            接收任务已添加
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnReceiveTaskAdded(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发接收任务已添加事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.ReceiveTaskFinished">
            <summary>
            接收任务完成
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnReceiveTaskFinished(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发接收任务完成事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.ReceiveItemStart">
            <summary>
            开始接收任务
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnReceiveItemStart(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            触发接收任务开始事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveRequired">
            <summary>
            请求接收文件
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveRequiring">
            <summary>
            正在请求接收文件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnFileReceiveRequired(FSLib.IPMessager.Core.FileReceiveRequiredEventArgs)">
            <summary>
            触发请求接收文件事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnFileReceiveRequiring(FSLib.IPMessager.Core.FileReceiveRequiredEventArgs)">
            <summary>
            引发 <seealso cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveRequiring"/> 事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskReDroped">
            <summary>
            接收失败的文件请求，请求重新接收
            <para>当上次文件接收的时候出现了异常，将会引发此请求，请求的任务列表包含了尚未成功接收的文件信息请求重新接收。</para>
            <para>如果已经处理，请将 <see cref="!:FSLib.IPMessager.Core.FileTaskManager.FileTaskEventArgs" /> 的 IsHandled 属性设为 true，否则将会引发<seealso cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskReDroped"/> 事件。</para>
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnFileReceiveTaskReDroped(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            引发 <seealso cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskReDroped"/> 事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskDiscarded">
            <summary>
            接收失败的文件请求，请求重新接收
            <para>当上次文件接收中出现异常而导致引发的 <seealso cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskReDroped"/> 事件并没有被处理时，将会引发此事件，请求发送信息通知对方文件已经取消接收。</para>
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnFileReceiveTaskDiscarded(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            引发 <seealso cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskDiscarded"/> 事件
            <para>当上次文件接收中出现异常而导致引发的 <seealso cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceiveTaskReDroped"/> 事件并没有被处理时，将会引发此事件，请求发送信息通知对方文件已经取消接收。</para>
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.FileReceived">
            <summary>
            当文件请求收到时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnFileReceived(FSLib.IPMessager.Core.FileReceivedEventArgs)">
            <summary>
            引发 <see cref="E:FSLib.IPMessager.Core.FileTaskManager.FileReceived" /> 事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.AddReceiveTask(FSLib.IPMessager.Entity.FileTaskInfo)">
            <summary>
            添加文件传输任务
            </summary>
            <param name="task">任务信息</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.CancelReceiveTask(System.UInt64)">
            <summary>
            取消接收任务
            </summary>
            <param name="packageId">包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.CancelReceiveTask(System.UInt64,System.Int32)">
            <summary>
            取消接收任务
            </summary>
            <param name="packageId">包编号</param>
            <param name="index">索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.MarkReceiveTaskItemState(FSLib.IPMessager.Entity.FileTaskItem,FSLib.IPMessager.Entity.FileTaskItemState)">
            <summary>
            标记一个任务项目状态，并检查任务是否完成
            </summary>
            <param name="item">任务条目</param>
            <param name="state">状态</param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.StartReceive">
            <summary>
            检测任务是否可以启动
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.InitReceiveManager">
            <summary>
            初始化接收
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.RaiseReceiveStatusUpdateEvent">
            <summary>
            触发接收状态更新事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.EnsureReceiveStateUpdateTimerState">
            <summary>
            确认定时器是否可用
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Core.FileTaskManager.TaskExpiresEventHandler">
            <summary>
            超时委托
            </summary>
            <param name="sender">事件发送方</param>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.TaskExpires">
            <summary>
            任务超时
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnTaskExpires(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            引发任务超时事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.InitTaskExpiresDetector">
            <summary>
            初始化任务超时调度
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.DetectExpiresTasks">
            <summary>
            检测超时的任务
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.OnReleaseFileRequired(FSLib.IPMessager.Core.FileTaskEventArgs)">
            <summary>
            引发请求释放文件事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Core.FileTaskManager.ReleaseFileRequired">
            <summary>
            请求释放事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Core.FileTaskManager.ReleaseFile(System.UInt64)">
            <summary>
            释放发送的文件请求
            </summary>
            <param name="pkgid"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Debug.DebugHelper">
            <summary>
            调试器辅助类
            <para>这个是供调试使用的辅助类，输出将会直接输出到VS的调试窗口。</para>
            <para>这和调试插件是不一样的</para>
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Debug.DebugHelper.#ctor">
            <summary>
            构造一个新的调试器对象
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Debug.DebugHelper.AttachHelperAuto(FSLib.IPMessager.IPMClient)">
            <summary>
            将调试器辅助类附加到客户端上
            <para>这个是自动附加上的，如果当前处于Release模式，将不会附加</para>
            </summary>
            <param name="client">要附加的客户端</param>
        </member>
        <member name="M:FSLib.IPMessager.Debug.DebugHelper.AttachHelper(FSLib.IPMessager.IPMClient)">
            <summary>
            将调试器辅助类附加到客户端上
            <para>这个是强行附加上的，不会考虑到是DEBUG模式还是Release模式</para>
            </summary>
            <param name="client">要附加的客户端</param>
        </member>
        <member name="P:FSLib.IPMessager.Debug.DebugHelper.Client">
            <summary>
            客户端对象
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileTaskItemState">
            <summary>
            文件传输单个任务的状态
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Scheduled">
            <summary>
            队列中
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Initializing">
            <summary>
            初始化中
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Processing">
            <summary>
            传输中
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Failure">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Finished">
            <summary>
            传输成功
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Canceled">
            <summary>
            任务取消
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTaskItemState.Canceling">
            <summary>
            正在取消
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileTransferDirection">
            <summary>
            文件传输的方向
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTransferDirection.Send">
            <summary>
            发送文件
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileTransferDirection.Receive">
            <summary>
            接收文件
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.Direction">
            <summary>
            文件传输的方向
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.PackageID">
            <summary>
            原始消息包的编号
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.TaskList">
            <summary>
            发送文件时有效，等待发送的文件列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.RemoteHost">
            <summary>
            远程主机信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.CancelPadding">
            <summary>
            是否处于等待取消的状态
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.CreateTime">
            <summary>
            任务创建的时间
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.IFileTaskInfo.IsRetry">
            <summary>
            是否是重新尝试接收的任务
            </summary>
            <value>
            当任务接收失败后，接收管理器将会引发重新接收事件。自此，本属性将会设置为true
            </value>
        </member>
        <member name="T:FSLib.IPMessager.Entity.MessageEventArgs">
            <summary>
            包事件参数
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.MessageEventArgs.Message">
            <summary>
            消息对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.MessageEventArgs.Host">
            <summary>
            发送到的主机
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.MessageEventArgs.IsHandled">
            <summary>
            是否已经处理过了
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.MessageEventArgs.#ctor(FSLib.IPMessager.Entity.Message)">
            <summary>
            创建一个新的 PackageEventArgs 对象.
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.MessageEventArgs.#ctor(FSLib.IPMessager.Entity.Message,FSLib.IPMessager.Entity.Host)">
            <summary>
            创建一个新的 MessageEventArgs 对象.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.Config">
            <summary>
            使用的客户端通信配置
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.#ctor">
            <summary>
            构造器
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.IsInAbsenceMode">
            <summary>
            是否在离开状态
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.AbsenceMessage">
            <summary>
            离开状态信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.AbsenceSuffix">
            <summary>
            离开信息后缀
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.VersionInfo">
            <summary>
            版本信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.BanedHost">
            <summary>
            已经被屏蔽的主机IP列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.KeepedHostList_Addr">
            <summary>
            DialUp的主机IP列表
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.AddHostToDialList(System.Net.IPAddress)">
            <summary>
            将主机添加到拨号列表
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.RemoveHostFromDialList(System.String)">
            <summary>
            将主机从拨号列表中移除
            </summary>
            <param name="address"></param>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.KeepedHostList">
            <summary>
            DialUp的主机IP列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.AutoReplyWhenAbsence">
            <summary>
            离开时自动回复
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.AutoReply">
            <summary>
            自动回复
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.AutoReplyMessage">
            <summary>
            自动回复消息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.HostName">
            <summary>
            主机名
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.HostUserName">
            <summary>
            主机用户名
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.Port">
            <summary>
            通信使用的端口
            </summary>
            <value></value>
            <returns></returns>
            <remarks>默认是2425,改变此端口后重新启动通信才可</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.NickName">
            <summary>
            飞鸽的用户名
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.GroupName">
            <summary>
            用户组(显示为飞鸽的用户组)
            </summary>
            <value>用户组</value>
            <returns>值</returns>
            <remarks>默认是 飞鸽用户</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.SocketBuffer">
            <summary>
            Socket的缓冲区大小,只读
            </summary>
            <value></value>
            <returns></returns>
            <remarks>由C版拓展而来,保留为 65535</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.UdpBuffer">
            <summary>
            UDP通信的缓冲区大小
            </summary>
            <value></value>
            <returns></returns>
            <remarks>由C版转移而来,保留为16384</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.BindedIP">
            <summary>
            绑定的IP
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.BindedIPString">
            <summary>
            绑定的IP的字符串表现形式
            </summary>
            <remarks>这是供序列化使用的，请不要在代码中使用它</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.FileShareLimits">
            <summary>
            限制的内容
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.IgnoreNoAddListFlag">
            <summary>
            忽略不加入列表的标志位
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.EnableHostNotifyBroadcast">
            <summary>
            是否开启通知非本网段主机上线功能
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.ForceOldContract">
            <summary>
            是否强制启用老版本协议
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.EnableFileTransfer">
            <summary>
            是否允许网络文件传输
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.IgnoreLoopBack">
            <summary>
            忽略回传的消息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.AutoDetectVersion">
            <summary>
            自动查询主机版本
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.ConnectionTimeout">
            <summary>
            TCP连接超时
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.BanHost(System.Net.IPAddress)">
            <summary>
            加入一个主机到黑名单
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.BanHost(FSLib.IPMessager.Entity.Host)">
            <summary>
            加入一个主机到黑名单
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.IsHostInBlockList(System.Net.IPAddress)">
            <summary>
            检测一个主机是否在黑名单中
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.IsHostInBlockList(FSLib.IPMessager.Entity.Host)">
            <summary>
            检测一个主机是否在黑名单中
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.UnBanIP(System.Net.IPAddress)">
            <summary>
            取消指定主机的屏蔽
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.UnBanAllIp">
            <summary>
            清空屏蔽列表
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.GetRandomTick">
            <summary>
            获得随机的编号
            </summary>
            <returns></returns>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.Buffer">
            <summary>
            文件传输的缓冲区大小,单位是字节
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.TaskKeepTime">
            <summary>
            文件发送任务过期时间(S)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.TasksMultiReceiveCount">
            <summary>
            同时接收文件的任务数
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.EnableBPContinue">
            <summary>
            接收文件时允许断点续传
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Config.Services">
            <summary>
            服务
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.Serialize">
            <summary>
            将本对象序列化
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Config.CreateConfigFromString(System.String)">
            <summary>
            创建配置
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileSystemOperationType">
            <summary>
            文件系统操作异常类别
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileSystemOperationType.OpenFileToSend">
            <summary>
            打开文件发送
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileSystemOperationType.QueryDirectory">
            <summary>
            读取目录
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileSystemOperationType.CreateDirectory">
            <summary>
            创建目录
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileSystemOperationType.CreateFile">
            <summary>
            创建文件
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Entity.FileSystemOperationType.WriteData">
            <summary>
            写入数据
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileSystemOperationErrorEventArgs">
            <summary>
            文件系统操作事件数据
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileSystemOperationErrorEventArgs.OperationType">
            <summary>
            操作类型
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileSystemOperationErrorEventArgs.FullPath">
            <summary>
            操作的路径
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileSystemOperationErrorEventArgs.Host">
            <summary>
            对应的主机
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileSystemOperationErrorEventArgs.#ctor(FSLib.IPMessager.Entity.FileSystemOperationType,System.String,FSLib.IPMessager.Entity.Host)">
            <summary>
            Initializes a new instance of the FileSystemOperationError class.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileTaskItem">
            <summary>
            文件传输任务的单个文件记录
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FullPath">
            <summary>
            文件的完整路径
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.IsFolder">
            <summary>
            是否是文件夹
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FileCount">
            <summary>
            文件数目
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FolderCount">
            <summary>
            文件夹数目
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.CurrentName">
            <summary>
            当前名称
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.CurrentFileSize">
            <summary>
            当前传输的文件长度
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.CurrentFileTransfered">
            <summary>
            当前传输完成的长度
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FileTransferedAtPast">
            <summary>
            以前传输过的长度（断点续传时速度不正确修正）
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FinishedFileCount">
            <summary>
            完成的文件数目
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FinishedFolderCount">
            <summary>
            完成的文件夹数目
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.TotalSize">
            <summary>
            总长度
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.FinishedSize">
            <summary>
            完成的长度
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.StartTime">
            <summary>
            开始的时刻
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.EndTime">
            <summary>
            停止的时间
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.State">
            <summary>
            任务状态
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.TaskInfo">
            <summary>
            所属的任务信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.Name">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskItem.CancelPadding">
            <summary>
            是否处于等待取消的状态
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItem.GetStateInfo(System.TimeSpan@,System.TimeSpan@,System.Double@,System.Int32@)">
            <summary>
            获得任务相关信息
            </summary>
            <param name="ElapsedTime">使用的时间</param>
            <param name="EstimateTime">估计的剩余时间</param>
            <param name="AverageSpeed">平均速度</param>
            <param name="percentage">进度</param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItem.OpenReadStream">
            <summary>
            打开数据读取流
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItem.OpenWriteStream">
            <summary>
            打开数据写入流
            </summary>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileTaskItemHelper">
            <summary>
            文件任务项目助手
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItemHelper.BuildTaskList(System.Collections.Generic.Dictionary{System.String,System.Int64})">
            <summary>
            根据任务大小信息创建任务列
            </summary>
            <param name="sizeList">尺寸大小定义</param>
            <returns>创建的列表</returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItemHelper.BuildTaskMessage(FSLib.IPMessager.Entity.FileTaskItem[])">
            <summary>
            根据任务列表创建扩展信息
            </summary>
            <param name="taskList">任务列表</param>
            <returns>任务信息</returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskItemHelper.DecompileTaskInfo(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Entity.Message)">
            <summary>
            从文本信息里面解析出任务信息
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Entity.SerializableDictionary`2">
            <summary>
            支持XML序列化的泛型Dictionary类
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:FSLib.IPMessager.Entity.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            从对象的XML表示形式生成该对象
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            将对象转换为其XML表示形式
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FSLib.IPMessager.Entity.Message">
            <summary>
            信息封包对象
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.Handled">
            <summary>
            是否已经被处理.在挂钩过程中,如果为true,则底层代码不会再对信息进行处理
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.PackageNo">
            <summary>
            获得或设置当前的消息编号
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.HostName">
            <summary>
            获得或设置当前的消息所属的主机名
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.UserName">
            <summary>
            获得或设置当前的消息所属的用户名
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.Command">
            <summary>
            获得或设置当前的命令代码
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.Options">
            <summary>
            获得或设置当前的命令选项
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.NormalMsg">
            <summary>
            获得或设置当前的命令消息文本
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.NormalMsgBytes">
            <summary>
            消息文本字节
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.ExtendMessageBytes">
            <summary>
            扩展消息文本字节
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.ExtendMessage">
            <summary>
            获得或设置当前命令的扩展文本
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.Host">
            <summary>
            关联的主机
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Message.Create(FSLib.IPMessager.Entity.Host,System.Net.IPEndPoint,System.UInt64,System.String,System.String,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            直接创建一个新的Message对象
            </summary>
            <param name="host">主机对象</param>
            <param name="addr">远程地址</param>
            <param name="packagerNumber">端口</param>
            <param name="hostName">主机名</param>
            <param name="userName">用户名</param>
            <param name="command">命令</param>
            <param name="options">选项</param>
            <param name="message">信息</param>
            <param name="extendMessage">扩展信息</param>
            <returns></returns>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsFileAttached">
            <summary>
            获得或设置是否附带了文件
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsFileEnhancedProtocol">
            <summary>
            获得或设置是不是新版本的文件传输协议
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsReadMsgConfirmRequired">
            <summary>
            获得或设置是否确认阅读的消息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsAutoSendMessage">
            <summary>
            获得或设置消息是否是自动回复的
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsReadCheck">
            <summary>
            获得或设置消息是否使用ReadCheck标志
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsRequireReceiveCheck">
            <summary>
            获得或设置消息收到时是否需要返回确认包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsRequireReadCheck">
            <summary>
            获得或设置消息收到时是否需要返回确认包(ReadCheck)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsBroadCast">
            <summary>
            获得或设置是否是广播包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsMultiSend">
            <summary>
            是否批量发送
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsEncrypt">
            <summary>
            是否加密
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsEncodingUnicode">
            <summary>
            是否使用Unicode编码
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.IsSecret">
            <summary>
            是否封包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Message.AutoReplyTime">
            <summary>
            自动回复时间
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.OnlineHost">
            <summary>
            主机在线状态维护类
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.#ctor(FSLib.IPMessager.Entity.Config)">
            <summary>
            创建一个新的 OnlineHost 对象.
            </summary>
            <param name="config">使用的配置</param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.IsEnhancedContractEnabled(System.String)">
            <summary>
            返回指定的主机是否支持增强协议模式
            </summary>
            <param name="ipaddress">远程主机的IP地址</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.GetHost(System.String)">
            <summary>
            返回指定主机的信息
            </summary>
            <param name="ipaddress">主机地址</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.Add(System.String,FSLib.IPMessager.Entity.Host)">
            <summary>
            添加主机到主机列表中
            </summary>
            <param name="host">主机信息</param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.Delete(System.String)">
            <summary>
            将主机从列表中删除
            </summary>
            <param name="ipaddress">主机地址</param>
            <returns>被删除的主机</returns>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.Clear">
            <summary>
            清空主机列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.OnlineHost.Config">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.OnlineHost.HostEventArgs">
            <summary>
            主机事件数据类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.OnlineHost.HostEventArgs.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.HostEventArgs.#ctor(FSLib.IPMessager.Entity.Host)">
            <summary>
            创建一个新的 HostEventArgs 对象.
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Entity.OnlineHost.HostOnline">
            <summary>
            主机上线
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Entity.OnlineHost.HostOffline">
            <summary>
            主机下线
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Entity.OnlineHost.HostCleared">
            <summary>
            主机列表清空
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.OnHostOnline(FSLib.IPMessager.Entity.OnlineHost.HostEventArgs)">
            <summary>
            触发主机上线事件
            </summary>
            <param name="e">参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.OnHostOffline(FSLib.IPMessager.Entity.OnlineHost.HostEventArgs)">
            <summary>
            触发主机下线事件
            </summary>
            <param name="e">参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.OnlineHost.OnHostCleared">
            <summary>
            触发主机列表清空事件
            </summary>
            <param name="e">参数</param>
        </member>
        <member name="T:FSLib.IPMessager.Entity.FileTaskInfo">
            <summary>
            文件传输任务
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.Direction">
            <summary>
            文件传输的方向
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.PackageID">
            <summary>
            原始消息包的编号
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.TaskList">
            <summary>
            发送文件时有效，等待发送的文件列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.RemoteHost">
            <summary>
            远程主机信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.CancelPadding">
            <summary>
            是否处于等待取消的状态
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.CreateTime">
            <summary>
            任务创建的时间
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.FileTaskInfo.IsRetry">
            <summary>
            是否是重新尝试接收的任务
            </summary>
            <value>
            当任务接收失败后，接收管理器将会引发重新接收事件。自此，本属性将会设置为true
            </value>
        </member>
        <member name="M:FSLib.IPMessager.Entity.FileTaskInfo.#ctor(FSLib.IPMessager.Entity.FileTransferDirection,System.UInt64,FSLib.IPMessager.Entity.Host)">
            <summary>
            创建一个新的 FileTaskInfo 对象.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.Host">
            <summary>
            主机用户信息
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.Index">
            <summary>
            索引,貌似没实际的用处(仅用于界面的索引)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.HostFeature">
            <summary>
            表示客户端主机的功能标识
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.HostSub">
            <summary>
            主机物理信息
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.NickName">
            <summary>
            昵称
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.GroupName">
            <summary>
            用户组名称
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.AbsenceMessage">
            <summary>
            离开状态信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.IsInAbsenceMode">
            <summary>
            是否在离开状态
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.ClientVersion">
            <summary>
            客户端版本(扩展而来)
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.PubKey">
            <summary>
            加密密钥
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.Exponent">
            <summary>
            向量
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.SetEncryptInfo(System.Byte[],System.Byte[])">
            <summary>
            设置加密信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.SupportEncrypt">
            <summary>
            是否支持加密通讯
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.IsEncryptUseSmallKey">
            <summary>
            加密能力-是否使用低等级加密
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.SupportFileTransport">
            <summary>
            是否支持文件传输
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.HasShare">
            <summary>
            是否有文件共享(扩展而来)
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.IsEnhancedContractEnabled">
            <summary>
            是否支持新版本的协议
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.Host.QueuedMessage">
            <summary>
            等待公钥而没有发出去的信息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.#ctor">
            <summary>
            构造一个新的对象
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.ChangeAbsenceMode(System.Boolean,System.String)">
            <summary>
            设置当前主机的离开信息
            </summary>
            <param name="isInAbsenceMode">是否处于离开模式</param>
            <param name="absenceMessage">离开模式状态信息</param>
        </member>
        <member name="E:FSLib.IPMessager.Entity.Host.AbsenceModeChanged">
            <summary>
            主机的离开状态变化事件
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Entity.Host.NickNameChanged">
            <summary>
            主机昵称变化事件
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Entity.Host.ClientVersionResolved">
            <summary>
            主机版本获得信息事件
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Entity.Host.PublicKeyChanged">
            <summary>
            主机公钥变更
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.OnAbsenceModeChanged(System.EventArgs)">
            <summary>
            触发主机的离开状态变化事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.OnInfoChanged(System.EventArgs)">
            <summary>
            触发主机昵称变化事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.OnPublicKeyChanged(System.EventArgs)">
            <summary>
            触发主机公钥变更事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.OnClientVersionResolved(System.EventArgs)">
            <summary>
            触发主机版本获得信息事件
            </summary>
            <param name="e">时间参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Entity.Host.AbsenceMessageChanged">
            <summary>
            离开状态信息切换
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.OnAbsenceMessageChanged(System.EventArgs)">
            <summary>
            触发离开状态信息切换事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Entity.Host.HostFeatureRefreshed">
            <summary>
            主机功能标识被更新
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Entity.Host.OnHostFeatureRefreshed">
            <summary>
            引发 <see cref="E:FSLib.IPMessager.Entity.Host.HostFeatureRefreshed"/> 事件
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Entity.HostSub">
            <summary>
            主机信息
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.HostSub.UserName">
            <summary>
            登陆的用户名，长度最长为 MAX_NAMEBUFFER ，默认为 50
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.HostSub.HostName">
            <summary>
            主机名，长度最长为 MAX_NAMEBUFFER ，默认为 50
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.HostSub.Ipv4Address">
            <summary>
            主机地址（数值表示方法）
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:FSLib.IPMessager.Entity.HostSub.IPHeader">
            <summary>
            IP段
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.HostSub.PortNo">
            <summary>
            主机的通信端口
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.IPMessager.Entity.PackedNetworkMessage">
            <summary>
            将要发送的数据包信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.Version">
            <summary>
            封包版本
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.Data">
            <summary>
            要发送的数据包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.RemoteIP">
            <summary>
            远程地址
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.SendTimes">
            <summary>
            发送次数
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.PackageNo">
            <summary>
            包编号
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.PackageIndex">
            <summary>
            分包索引
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.PackageCount">
            <summary>
            分包总数
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.IsReceiveSignalRequired">
            <summary>
            获得或设置是否需要返回已收到标志
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Entity.PackedNetworkMessage.CreationTime">
            <summary>
            获得生成数据包的时间
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.IpmEvents">
            <summary>
            表示所有公开的飞鸽传书客户端的事件集合
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IpmEvents.EnableThreadContextSynchroization">
            <summary>
            获得或设置是否允许启用跨线程调用模式。如果设置为true，将会把一切事件都封送到创建事件的线程上进行调用
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.SendOrPostCallback(System.Boolean,System.EventHandler,FSLib.IPMessager.IPMClient)">
            <summary>
            进行指定的事件回调
            </summary>
            <param name="sync">true表示同步回调，false则是异步。这仅在启用跨线程调用时有效</param>
            <param name="handler">事件句柄</param>
            <param name="client">当前的客户端</param>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.SendOrPostCallback``1(System.Boolean,System.EventHandler{``0},FSLib.IPMessager.IPMClient,``0)">
            <summary>
            进行指定的事件回调
            </summary>
            <param name="sync">true表示同步回调，false则是异步。这仅在启用跨线程调用时有效</param>
            <param name="handler">事件句柄</param>
            <param name="client">当前的客户端</param>
            <param name="args">要回调用的事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.UdpNetworkError">
            <summary>
            网络出现异常（如端口无法绑定等，此时无法继续工作）
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnUdpNetworkError(FSLib.IPMessager.IPMClient,System.EventArgs)">
            <summary>
            当UDP网络出现错误的时候触发
            </summary>
            <param name="client">引发此事件的源对象</param>
            <param name="e">包含此事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.UdpPackageDroped">
            <summary>
            主机消息包被丢弃时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnUdpPackageDroped(FSLib.IPMessager.IPMClient,FSLib.IPMessager.Network.NetworkPackageEventArgs)">
            <summary>
            主机消息包被丢弃时，被调用
            </summary>
            <param name="client">引发此事件的源对象</param>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.UdpIpValidateRequired">
            <summary>
            当收到远程主机的消息，需要对其进行验证时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnUdpIpValidateRequired(FSLib.IPMessager.IPMClient,FSLib.IPMessager.Network.IpValidateRequiredEventArgs)">
            <summary>
            当事件触发时调用
            </summary>
            <param name="client">引发此事件的源对象</param>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.UdpPackageReceived">
            <summary>
            当数据包收到时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnUdpPackageReceived(FSLib.IPMessager.IPMClient,FSLib.IPMessager.Network.PackageReceivedEventArgs)">
            <summary>
            当数据包收到事件触发时，被调用
            </summary>
            <param name="client">引发此事件的源对象</param>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.UdpPackageSendFailure">
            <summary>
            数据包发送失败
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnUdpPackageSendFailure(FSLib.IPMessager.IPMClient,FSLib.IPMessager.Network.PackageSendEventArgs)">
            <summary>
            当数据发送失败时调用
            </summary>
            <param name="client">引发此事件的源对象</param>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.UdpPackageResend">
            <summary>
            数据包未接收到确认，重新发送
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnUdpPackageResend(FSLib.IPMessager.IPMClient,FSLib.IPMessager.Network.PackageSendEventArgs)">
            <summary>
            触发重新发送事件
            </summary>
            <param name="client">引发此事件的源对象</param>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.TcpThreadFileSystemOperationError">
            <summary>
            在文件操作中出现异常
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnTcpThreadFileSystemOperationError(FSLib.IPMessager.IPMClient,FSLib.IPMessager.Entity.FileSystemOperationErrorEventArgs)">
            <summary>
            引发 <see cref="E:FSLib.IPMessager.IpmEvents.TcpThreadFileSystemOperationError" /> 事件
            </summary>
            <param name="sender">引发此事件的源对象</param>
            <param name="ea">包含此事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.IpmEvents.TcpNetworkError">
            <summary>
            TCP端口绑定出现错误
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IpmEvents.OnTcpNetworkError(System.Object)">
            <summary>
            引发 <see cref="E:FSLib.IPMessager.IpmEvents.TcpNetworkError" /> 事件
            </summary>
            <param name="sender">引发此事件的源对象</param>
        </member>
        <member name="T:FSLib.IPMessager.Network.IpValidateRequiredEventArgs">
            <summary>
            IP被要求验证的类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.IpValidateRequiredEventArgs.IsPackageDroped">
            <summary>
            是否抛弃主机包
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.IpValidateRequiredEventArgs.#ctor">
            <summary>
            创建一个新的 IpValidateRequiredEventArgs 对象.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Network.IpValidateRequiredEventHandler">
            <summary>
            委托，供IP验证使用
            </summary>
            <param name="sender">事件源</param>
            <param name="e">事件的数据</param>
        </member>
        <member name="T:FSLib.IPMessager.Network.IUdpWorker">
            <summary>
            UDP文本消息接收类
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Close">
            <summary>
            关闭客户端
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(System.Int32,System.Byte[],System.UInt64)">
            <summary>
            发送数据。这个请求发送的是广播请求
            </summary>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.IUdpWorker.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.IUdpWorker.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(System.Boolean,System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.IUdpWorker.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.IUdpWorker.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="receiveConfirm">消息是否会回发确认包</param>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64,System.Int32)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.IUdpWorker.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.IUdpWorker.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">分包索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(System.Boolean,System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64,System.Int32)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.IUdpWorker.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.IUdpWorker.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="receiveConfirm">消息是否会回发确认包</param>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">分包索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(System.Boolean,System.Net.IPEndPoint,System.Byte[],System.UInt64,System.Int32)">
            <summary>
            发送数据，并对数据作回应检查。当 <see cref="!:receiveConfirm"></see> 为 true 时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.IUdpWorker.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.IUdpWorker.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="receiveConfirm">消息是否会回发确认包</param>
            <param name="address">远程主机地址</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">分包索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.Send(FSLib.IPMessager.Entity.PackedNetworkMessage)">
            <summary>
            将已经打包的消息发送出去
            </summary>
            <param name="packedMessage">已经打包的消息</param>
            <param name="confirmReceived">是否回发确认消息</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.IUdpWorker.PopSendItemFromList(System.UInt64,System.Int32)">
            <summary>
            将数据包从列表中移除
            </summary>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">数据包分包索引</param>
        </member>
        <member name="P:FSLib.IPMessager.Network.IUdpWorker.IsInitialized">
            <summary>
            是否已经初始化了
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.IUdpWorker.CheckQueueTimeInterval">
            <summary>
            检查发送队列间隔
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.IUdpWorker.MaxResendTimes">
            <summary>
            没有收到确认包时，最大重新发送的数目，超过此数目会丢弃并触发 <see cref="!:PackageSendFailture"></see> 事件。
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.IUdpWorker.NetworkError">
            <summary>
            网络出现异常（如端口无法绑定等，此时无法继续工作）
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.IUdpWorker.PackageDroped">
            <summary>
            主机消息包被丢弃时触发
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.IUdpWorker.IpValidateRequired">
            <summary>
            当收到远程主机的消息，需要对其进行验证时触发
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.IUdpWorker.PackageReceived">
            <summary>
            当数据包收到时触发
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.IUdpWorker.PackageSendFailure">
            <summary>
            数据包发送失败
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.IUdpWorker.PackageResend">
            <summary>
            数据包未接收到确认，重新发送
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Network.PackageEventArgs">
            <summary>
            数据包事件数据
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageEventArgs.IsMultiPackage">
            <summary>
            是否是多包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageEventArgs.Package">
            <summary>
            网络消息包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageEventArgs.Packages">
            <summary>
            网络消息包组（仅针对版本2协议有效）
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageEventArgs.IsHandled">
            <summary>
            是否已经处理
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.PackageEventArgs.#ctor(System.Boolean,FSLib.IPMessager.Entity.PackedNetworkMessage,FSLib.IPMessager.Entity.PackedNetworkMessage[])">
            <summary>
            创建一个新的 PackageEventArgs 对象.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Network.NetworkPackageEventArgs">
            <summary>
            消息包信息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.NetworkPackageEventArgs.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.NetworkPackageEventArgs.IPEndPoint">
            <summary>
            远程主机的IP端口
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.NetworkPackageEventArgs.Data">
            <summary>
            收到或发送的数据
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Network.PackageReceivedEventArgs">
            <summary>
            远程数据包收到时的信息包
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageReceivedEventArgs.Data">
            <summary>
            远程数据
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageReceivedEventArgs.RemoteIP">
            <summary>
            远程IP
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageReceivedEventArgs.IsHandled">
            <summary>
            是否已经处理
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.PackageReceivedEventArgs.#ctor(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            创建一个新的 PackageReceived 对象.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Network.PackageSendEventArgs">
            <summary>
            发送失败的事件数据类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.PackageSendEventArgs.Package">
            <summary>
            发送失败的数据
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.PackageSendEventArgs.#ctor">
            <summary>
            构造一个新的对象
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Network.MessagePackerV2">
            <summary>
            封包消息-版本2，这个版本的封包消息本身是经过压缩的，并且支持消息分片
            </summary>
            <remarks>这个版本的封包消息飞鸽传书VC版是不支持的</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessagePackerV2.VersionHeader">
            <summary>
            消息版本号
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessagePackerV2.PackageHeaderLength">
            <summary>
            返回当前消息封包的头字节数
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.BuildNetworkMessage(FSLib.IPMessager.Entity.Message)">
            <summary>
            获得消息包的字节流
            </summary>
            <param name="message">要打包的消息对象</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.BuildNetworkMessage(System.Net.IPEndPoint,System.UInt64,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            获得消息包的字节流
            </summary>
            <param name="remoteIp">远程主机地址</param>
            <param name="packageNo">包编号</param>
            <param name="command">命令</param>
            <param name="options">参数</param>
            <param name="userName">用户名</param>
            <param name="hostName">主机名</param>
            <param name="content">正文消息</param>
            <param name="extendContents">扩展消息</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.Test(System.Byte[])">
            <summary>
            检测确认是否是这个类型的消息包
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="F:FSLib.IPMessager.Network.MessagePackerV2.packageCache">
            <summary>
            缓存接收到的片段
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.DecompressMessagePacks(FSLib.IPMessager.Entity.PackedNetworkMessage[])">
            <summary>
            组合所有的网络数据包并执行解压缩
            </summary>
            <param name="packs"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.ParseToMessage(FSLib.IPMessager.Entity.PackedNetworkMessage[])">
            <summary>
            分析网络数据包并进行转换为信息对象
            </summary>
            <param name="packs">接收到的封包对象</param>
            <returns></returns>
            <remarks>
            对于分包消息，如果收到的只是片段并且尚未接收完全，则不会进行解析
            </remarks>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.TryToTranslateMessage(FSLib.IPMessager.Entity.PackedNetworkMessage)">
            <summary>
            尝试将收到的网络包解析为实体
            </summary>
            <param name="pack">收到的网络包</param>
            <returns></returns>
            <remarks>如果收到的包是分片包，且其所有子包尚未接受完全，则会返回空值</remarks>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.Parse(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            将网络信息解析为封包
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Network.MessagePackerV2.DecomprssFailedEventArgs">
            <summary>
            解压缩失败的事件数据
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessagePackerV2.DecomprssFailedEventArgs.Packs">
            <summary>
            解压缩失败的网络包
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.DecomprssFailedEventArgs.#ctor(FSLib.IPMessager.Entity.PackedNetworkMessage[])">
            <summary>
            创建一个新的 DecomprssFailedEventArgs 对象.
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.MessagePackerV2.DecompressFailed">
            <summary>
            网络层数据包解压缩失败
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePackerV2.OnDecompressFailed(FSLib.IPMessager.Network.MessagePackerV2.DecomprssFailedEventArgs)">
            <summary>
            触发解压缩失败事件
            </summary>
            <param name="e">事件包含的参数</param>
        </member>
        <member name="T:FSLib.IPMessager.Network.MessagePacker">
            <summary>
            封包消息-版本1
            </summary>
            <remarks>这个版本的封包消息与飞鸽传书VC版是兼容的</remarks>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessagePacker.VersionHeader">
            <summary>
            消息版本号
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessagePacker.PackageHeaderLength">
            <summary>
            返回当前消息封包的头字节数
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePacker.BuildNetworkMessage(FSLib.IPMessager.Entity.Message)">
            <summary>
            获得消息包的字节流
            </summary>
            <param name="message">要打包的消息对象</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePacker.BuildNetworkMessage(System.Net.IPEndPoint,System.UInt64,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            获得消息包的字节流
            </summary>
            <param name="remoteIp">远程主机地址</param>
            <param name="packageNo">包编号</param>
            <param name="command">命令</param>
            <param name="options">参数</param>
            <param name="userName">用户名</param>
            <param name="hostName">主机名</param>
            <param name="content">正文消息</param>
            <param name="extendContents">扩展消息</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePacker.Test(System.Byte[])">
            <summary>
            检测确认是否是这个类型的消息包
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessagePacker.TryToTranslateMessage(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            解析请求，并返回解析后的消息包
            </summary>
            <param name="buffer">数据包</param>
            <param name="remoteEndPoint">远程端点位置</param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Network.MessageTranslator">
            <summary>
            消息实体-网络消息的解析和翻译类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessageTranslator.Client">
            <summary>
            用来发送和接收消息的对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessageTranslator.Config">
            <summary>
            设置对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.MessageTranslator.LivedHost">
            <summary>
            网络在线主机状态
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.ResolveToMessage(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            尝试将收到的消息解析为实体对象
            </summary>
            <param name="buffer">封包消息</param>
            <param name="remoteEndPoint">远程主机的端点位置</param>
            <returns></returns>
            <remarks>如果是分包的消息且当前并未接收完全，则同样返回为空</remarks>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.DetermineConfirm(FSLib.IPMessager.Entity.Message)">
            <summary>
            检测是否需要发送回复包来确认收到
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.DetermineConfirm2(FSLib.IPMessager.Entity.Message)">
            <summary>
            检测是否需要发送回复包来确认收到
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.DetermineConfirm(FSLib.IPMessager.Entity.PackedNetworkMessage)">
            <summary>
            检测是否需要发送回复包来确认收到
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.SendWithCheck(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            发送消息并且要求对方返回已接收消息
            </summary>
            <param name="host">远程主机</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <exception cref="T:System.ArgumentNullException">当要求对方确认收到时,必须设置主机 host</exception>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.SendWithNoCheck(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="host">远程主机</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.SendByIp(System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            直接向目标IP发送信息
            </summary>
            <param name="host">远程主机</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.Send(FSLib.IPMessager.Entity.Host,System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String,System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="remoteEndPoint">远程主机地址</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.Send(FSLib.IPMessager.Entity.Message)">
            <summary>
            发送打包好的消息
            </summary>
            <param name="cm"></param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.Send(FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.String,System.String)">
            <summary>
            通过广播发送消息
            </summary>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.SendWithNoCheck(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.Byte[],System.Byte[])">
            <summary>
            以二进制模式发送消息并且要求对方返回已接收消息
            </summary>
            <param name="host">远程主机</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.SendWithCheck(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.Byte[],System.Byte[])">
            <summary>
            发送消息并且要求对方返回已接收消息
            </summary>
            <param name="host">远程主机.如果为null则会抛出异常</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.Send(FSLib.IPMessager.Entity.Host,System.Net.IPEndPoint,FSLib.IPMessager.Define.Consts.Commands,System.UInt64,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            以二进制模式发送消息
            </summary>
            <param name="host">关联的远程主机,不可以为null</param>
            <param name="remoteEndPoint">远程主机地址</param>
            <param name="cmd">命令</param>
            <param name="options">参数</param>
            <param name="normalMsg">常规信息</param>
            <param name="extendMessage">扩展消息</param>
            <param name="sendCheck">是否检查发送到</param>
            <exception cref="T:System.InvalidOperationException">如果对方主机不在列表中,或未知是否支持增强协议,则会抛出此异常</exception>
            <returns>返回发出的消息包编号</returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.udpClient_PackageReceived(System.Object,FSLib.IPMessager.Network.PackageReceivedEventArgs)">
            <summary>
            接收到UDP的消息包
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Network.MessageTranslator.MessageReceived">
            <summary>
            接收到消息包（UDP）
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.OnMessageReceived(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            引发接收到消息包事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Network.MessageTranslator.MessageSending">
            <summary>
            消息将要发送事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.OnMessageSending(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            引发消息将要发送事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Network.MessageTranslator.MessageSended">
            <summary>
            消息已经发送事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.OnMessageSended(FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            引发消息已经发送事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Network.MessageTranslator.PackageSending">
            <summary>
            数据包将要发送
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.OnPckageSending(FSLib.IPMessager.Network.PackageEventArgs)">
            <summary>
            触发数据包将要发送事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="E:FSLib.IPMessager.Network.MessageTranslator.PackageSended">
            <summary>
            数据包已经发送
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.MessageTranslator.OnPackageSended(FSLib.IPMessager.Network.PackageEventArgs)">
            <summary>
            触发数据包已发送事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="T:FSLib.IPMessager.Network.TCPThread">
            <summary>
            文件发送、接收线程
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.TCPThread.IsInitialized">
            <summary>
            是否已经初始化
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.TCPThread.Port">
            <summary>
            监听的端口
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.TCPThread.IP">
            <summary>
            绑定的IP
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.TCPThread.TaskManager">
            <summary>
            任务管理器
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.TCPThread.SendBuffer">
            <summary>
            发送缓冲区大小
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.TCPThread.Config">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.TCPThread.NetworkError">
            <summary>
            网络出现异常（如端口无法绑定等，此时无法发送文件，但是可以接收文件）
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.TCPThread.FileSystemOperationError">
            <summary>
            文件系统操作失败
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.StartListener">
            <summary>
            开始发送文件的监听线程
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.CloseListener">
            <summary>
            关闭监听线程
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.ListenForSendRequest">
            <summary>
            监听函数
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.PerformFileSend(System.Object)">
            <summary>
            处理文件发送请求
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.PerformSendFile(System.Net.Sockets.TcpClient,FSLib.IPMessager.Entity.FileTaskInfo,FSLib.IPMessager.Entity.FileTaskItem)">
            <summary>
            发送单个文件
            </summary>
            <param name="client"></param>
            <param name="task"></param>
            <param name="item"></param>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.ParseSendCommand(System.Byte[],System.Int32,System.Int32)">
            <summary>
            解析请求的命令
            </summary>
            <param name="buffer"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.ReceiveByBuffer(System.Net.Sockets.TcpClient,System.Byte[])">
            <summary>
            接收数据
            </summary>
            <param name="buffer">缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.ReceiveByBuffer(System.Net.Sockets.TcpClient,System.Byte[],System.Int32)">
            <summary>
            接收数据
            </summary>
            <param name="buffer">缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.ReceiveByBuffer(System.Net.Sockets.NetworkStream,System.Byte[])">
            <summary>
            接收数据
            </summary>
            <param name="buffer">缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.ReceiveByBuffer(System.Net.Sockets.NetworkStream,System.Byte[],System.Int32)">
            <summary>
            接收数据
            </summary>
            <param name="buffer">缓冲区</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread._taskManager_FileReceiveRequired(System.Object,FSLib.IPMessager.Core.FileReceiveRequiredEventArgs)">
            <summary>
            请求接收文件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.PerformFileReceive(FSLib.IPMessager.Entity.FileTaskInfo,FSLib.IPMessager.Entity.FileTaskItem)">
            <summary>
            开始接收文件任务
            </summary>
            <param name="task">任务信息</param>
            <param name="item">任务项目</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.PerformFileReceive_Folder(System.Net.Sockets.TcpClient,FSLib.IPMessager.Entity.FileTaskInfo,FSLib.IPMessager.Entity.FileTaskItem)">
            <summary>
            接收文件夹
            </summary>
            <param name="client"></param>
            <param name="task"></param>
            <param name="item"></param>
        </member>
        <member name="M:FSLib.IPMessager.Network.TCPThread.PerformFileReceive_File(System.Net.Sockets.TcpClient,FSLib.IPMessager.Entity.FileTaskInfo,FSLib.IPMessager.Entity.FileTaskItem)">
            <summary>
            接收文件
            </summary>
            <param name="client"></param>
            <param name="task"></param>
            <param name="item"></param>
        </member>
        <member name="T:FSLib.IPMessager.Network.UDPThread">
            <summary>
            UDP信息类，用于处理文本消息和命令通讯
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Network.UDPThread.client">
            <summary>
            UDP客户端
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Network.UDPThread.SendList">
            <summary>
            用于轮询是否发送成功的记录
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.#ctor(FSLib.IPMessager.IPMClient)">
            <summary>
            构造一个新的消息对象，并绑定到指定的端口和IP上。
            </summary>
            <param name="ip">绑定的IP</param>
            <param name="port">绑定的端口</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Close">
            <summary>
            关闭客户端
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(System.Int32,System.Byte[],System.UInt64)">
            <summary>
            发送数据。这个请求发送的是广播请求
            </summary>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.UDPThread.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.UDPThread.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(System.Boolean,System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.UDPThread.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.UDPThread.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="receiveConfirm">消息是否会回发确认包</param>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64,System.Int32)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.UDPThread.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.UDPThread.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">分包索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(System.Boolean,System.Net.IPAddress,System.Int32,System.Byte[],System.UInt64,System.Int32)">
            <summary>
            发送数据，并对数据作回应检查。当数据包编号大于0时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.UDPThread.CheckQueueTimeInterval"/> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.UDPThread.PopSendItemFromList(System.UInt64,System.Int32)"/> 方法来告知已收到数据包。
            </summary>
            <param name="receiveConfirm">消息是否会回发确认包</param>
            <param name="address">远程主机地址</param>
            <param name="port">远程主机端口</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">分包索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(System.Boolean,System.Net.IPEndPoint,System.Byte[],System.UInt64,System.Int32)">
            <summary>
            发送数据，并对数据作回应检查。当 <see cref="!:receiveConfirm"/> 为 true 时，将会在每隔 <see cref="P:FSLib.IPMessager.Network.UDPThread.CheckQueueTimeInterval"></see> 的间隔后重新发送，直到收到对方的回应。
            注意：网络层不会解析回应，请调用 <see cref="M:FSLib.IPMessager.Network.UDPThread.PopSendItemFromList(System.UInt64,System.Int32)"></see> 方法来告知已收到数据包。
            </summary>
            <param name="receiveConfirm">消息是否会回发确认包</param>
            <param name="address">远程主机地址</param>
            <param name="data">数据流</param>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">分包索引</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Send(FSLib.IPMessager.Entity.PackedNetworkMessage)">
            <summary>
            将已经打包的消息发送出去
            </summary>
            <param name="packedMessage">已经打包的消息</param>
            <param name="confirmReceived">是否回发确认消息</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.CheckUnConfirmedQueue">
            <summary>
            自由线程，检测未发送的数据并发出
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.PushSendItemToList(FSLib.IPMessager.Entity.PackedNetworkMessage)">
            <summary>
            将数据信息压入列表
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.PopSendItemFromList(System.UInt64,System.Int32)">
            <summary>
            将数据包从列表中移除
            </summary>
            <param name="packageNo">数据包编号</param>
            <param name="packageIndex">数据包分包索引</param>
        </member>
        <member name="P:FSLib.IPMessager.Network.UDPThread.IsInitialized">
            <summary>
            是否已经初始化了
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.UDPThread.CheckQueueTimeInterval">
            <summary>
            检查发送队列间隔
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Network.UDPThread.MaxResendTimes">
            <summary>
            没有收到确认包时，最大重新发送的数目，超过此数目会丢弃并触发 <see cref="!:PackageSendFailture"/> 事件。
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.UDPThread.NetworkError">
            <summary>
            网络出现异常（如端口无法绑定等，此时无法继续工作）
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Network.UDPThread.PackageDroped">
            <summary>
            主机消息包被丢弃时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.OnPackageDroped(FSLib.IPMessager.Network.NetworkPackageEventArgs)">
            <summary>
            主机消息包被丢弃时，被调用
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Network.UDPThread.IpValidateRequired">
            <summary>
            当收到远程主机的消息，需要对其进行验证时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.OnIpValidateRequired(FSLib.IPMessager.Network.IpValidateRequiredEventArgs)">
            <summary>
            当事件触发时调用
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FSLib.IPMessager.Network.UDPThread.PackageReceived">
            <summary>
            当数据包收到时触发
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.OnPackageReceived(FSLib.IPMessager.Network.PackageReceivedEventArgs)">
            <summary>
            当数据包收到事件触发时，被调用
            </summary>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Network.UDPThread.PackageSendFailure">
            <summary>
            数据包发送失败
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.OnPackageSendFailure(FSLib.IPMessager.Network.PackageSendEventArgs)">
            <summary>
            当数据发送失败时调用
            </summary>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="E:FSLib.IPMessager.Network.UDPThread.PackageResend">
            <summary>
            数据包未接收到确认，重新发送
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.OnPackageResend(FSLib.IPMessager.Network.PackageSendEventArgs)">
            <summary>
            触发重新发送事件
            </summary>
            <param name="e">包含事件的参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Network.UDPThread.Dispose">
            <summary>
            关闭客户端并释放资源
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Properties.Resources.CommandExecutor_ProcessCommand_Br_Entry_LeaveModeText">
            <summary>
              Looks up a localized string similar to 离开模式.
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Properties.Resources.CommandExecutor_ProcessCommand_GetAbsenceInfo_NotAbsenceMode">
            <summary>
              Looks up a localized string similar to Not absence mode.
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Properties.Resources.CommandExecutor_ProcessCommand_SendMsg_AutoReplyMessage">
            <summary>
              Looks up a localized string similar to 这是自动回复的消息，我暂时无法看到你的消息，稍后回复你.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.BanHostServiceProvider">
            <summary>
            黑名单提供插件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.BanHostServiceProvider.Initialize(FSLib.IPMessager.IPMClient)">
            <summary>
            执行初始化(已重载)
            </summary>
            <param name="client">客户端对象</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.BanHostServiceProvider.Startup">
            <summary>
            插件启动(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.BanHostServiceProvider.ShutDown">
            <summary>
            插件卸载(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.BanHostServiceProvider.SupportsConfig">
            <summary>
            是否支持配置(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.BanHostServiceProvider.ConfigUI">
            <summary>
            获得配置的UI界面(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.BanHostServiceProvider.SupportsResetConfig">
            <summary>
            是否支持重置设置(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.BanHostServiceProvider.ResetConfig">
            <summary>
            重置为默认设置(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.BanHostServiceProvider.ReloadConfig">
            <summary>
            重新加载设置(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.BanHostServiceProvider.PluginIcon">
            <summary>
            插件图标(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.BanHostServiceProvider.SupportLoad">
            <summary>
            是否支持中途加载(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.BanHostServiceProvider.SupportUnload">
            <summary>
            是否支持中途卸载(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.BanHostServiceProvider.CheckCanLoad(System.Boolean)">
            <summary>
            检查是否可以加载(已重载)
            </summary>
            <param name="isFirstCall">是否是飞鸽传书初始化时候的加载</param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Services.InnerService">
            <summary>
            内置插件枚举
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.InnerService.BlackListBlocker">
            <summary>
            黑名单组件
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.InnerService.RSAEncryptionComponent">
            <summary>
            RSA加密组件
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.InnerService.RemoveLoopBackMessage">
            <summary>
            移除回发消息
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.InnerService.MessageFilterService">
            <summary>
            脏字过滤
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.MessageEncryptProvider">
            <summary>
            通信加密组件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.#ctor">
            <summary>
            构造新的对象实例
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.MessageEncryptProvider.RSA_512_Encryptor">
            <summary>
            加密用的加密器(512位)
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.MessageEncryptProvider.RSA_512_Decryptor">
            <summary>
            加密用的加密器(512位)
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.MessageEncryptProvider.RSA_1024_Encryptor">
            <summary>
            加密用的加密器(1024位)
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.MessageEncryptProvider.RSA_1024_Decryptor">
            <summary>
            加密用的加密器(1024位)
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.MessageEncryptProvider.blowFish">
            <summary>
            BlogFish Encryptor
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.PublicKey_1024">
            <summary>
            公钥(1024)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.PublicKey_512">
            <summary>
            公钥(512)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.Exponent_1024">
            <summary>
            Exponent(1024)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.Exponent_512">
            <summary>
            Exponent(512)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.EncryptCapa">
            <summary>
            加密能力
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.EncryptSmallCapa">
            <summary>
            低强度加密
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.EncryptNormalCapa">
            <summary>
            高强度加密
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.InitializeEncryptor">
            <summary>
            初始化加密类
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.HandleEncryptedMessage(FSLib.IPMessager.Core.CommandExecutor)">
            <summary>
            将信息解密函数挂钩
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="F:FSLib.IPMessager.Services.MessageEncryptProvider.rcsp">
            <summary>
            随机数
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.EncryptMessage(FSLib.IPMessager.Core.CommandExecutor,FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            加密信息
            </summary>
            <param name="cmd">Commander</param>
            <param name="e">事件参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.DecryptMessage(FSLib.IPMessager.Core.CommandExecutor,FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            解析加密信息
            </summary>
            <param name="cmd">Commander</param>
            <param name="e">事件参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.GetPubKey(FSLib.IPMessager.Entity.Host)">
            <summary>
            获得指定主机的公钥
            </summary>
            <param name="host">主机</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.Startup">
            <summary>
            插件启动(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageEncryptProvider.GenerateClientFeatures">
            <summary>
            获得主机功能标识(已重载)
            </summary>
            <returns>新标识</returns>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageEncryptProvider.PluginIcon">
            <summary>
            插件图标(已重载)
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.IServiceProvider">
            <summary>
            服务提供接口
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.Initialize(FSLib.IPMessager.IPMClient)">
            <summary>
            执行初始化
            </summary>
            <param name="client">客户端对象</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.Startup">
            <summary>
            插件启动
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.ShutDown">
            <summary>
            插件卸载
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.SupportUnload">
            <summary>
            是否支持中途卸载
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.SupportLoad">
            <summary>
            是否支持中途加载
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.CheckCanLoad(System.Boolean)">
            <summary>
            检查是否可以加载
            </summary>
            <param name="isFirstCall">是否是飞鸽传书初始化时候的加载</param>
            <returns></returns>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.Version">
            <summary>
            当前运行的插件版本
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.GenerateClientFeatures">
            <summary>
            获得主机功能标识
            </summary>
            <returns>新标识</returns>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.SupportsConfig">
            <summary>
            是否支持更新
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.ConfigUI">
            <summary>
            获得配置的UI界面
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.SupportsResetConfig">
            <summary>
            是否支持重置设置
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.ResetConfig">
            <summary>
            重置为默认设置
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.IServiceProvider.ReloadConfig">
            <summary>
            重新加载设置
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.PluginIcon">
            <summary>
            插件图标
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.ProviderConfig">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.SupportControlPanel">
            <summary>
            是否支持在设置中心中扩展面板
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.IServiceProvider.ControlPanel">
            <summary>
            在设置中心中的配置面板
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Services.IServiceProvider.RequireLoadConfig">
            <summary>
            请求加载配置事件
            </summary>
        </member>
        <member name="E:FSLib.IPMessager.Services.IServiceProvider.ReuqireSaveConfig">
            <summary>
            请求保存配置事件
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.MessageFilterServiceProvider">
            <summary>
            内置的消息关键字过滤插件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.MessageFilterServiceProvider.Startup">
            <summary>
            启动插件(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageFilterServiceProvider.SupportLoad">
            <summary>
            是否支持中途加载(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.MessageFilterServiceProvider.SupportUnload">
            <summary>
            是否支持中途卸载(已重载)
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.ProviderBase">
            <summary>
            服务提供基类
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.Client">
            <summary>
            关联的用户属性
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.Commander">
            <summary>
            命令执行对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.FileTaskManager">
            <summary>
            文件管理器
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.Config">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.MessageClient">
            <summary>
            UDP文本信息网络层对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.MessageProxy">
            <summary>
            文本信息翻译层对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.OnlineHost">
            <summary>
            在线主机维护列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.ProviderConfig">
            <summary>
            插件的配置
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.Initialize(FSLib.IPMessager.IPMClient)">
            <summary>
            初始化设置
            </summary>
            <param name="client">初始化客户端</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.ShutDown">
            <summary>
            插件卸载
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.SupportsConfig">
            <summary>
            是否支持配置
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.ConfigUI">
            <summary>
            获得配置的UI界面
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.SupportsResetConfig">
            <summary>
            是否支持重置设置
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.ResetConfig">
            <summary>
            重置为默认设置
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.Version">
            <summary>
            默认提供当前插件的版本
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.ReloadConfig">
            <summary>
            重新加载设置
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.PluginIcon">
            <summary>
            插件图标
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.SupportUnload">
            <summary>
            是否支持中途卸载
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.SupportLoad">
            <summary>
            是否支持中途加载
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.SupportControlPanel">
            <summary>
            是否支持在设置中心中扩展面板
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase.ControlPanel">
            <summary>
            在设置中心中的配置面板
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.CheckCanLoad(System.Boolean)">
            <summary>
            检查是否可以加载
            </summary>
            <param name="isFirstCall">是否是飞鸽传书初始化时候的加载</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.GenerateClientFeatures">
            <summary>
            获得主机功能标识
            </summary>
            <returns>新标识</returns>
        </member>
        <member name="E:FSLib.IPMessager.Services.ProviderBase.RequireLoadConfig">
            <summary>
            请求加载配置事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.OnRequireLoadConfig(FSLib.IPMessager.Services.ServiceConfigEventArgs)">
            <summary>
            触发请求加载配置事件
            </summary>
            <param name="e">事件参数</param>
            <returns>返回是否被处理</returns>
        </member>
        <member name="E:FSLib.IPMessager.Services.ProviderBase.ReuqireSaveConfig">
            <summary>
            请求保存配置事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.OnRequireSaveConfig(FSLib.IPMessager.Services.ServiceConfigEventArgs)">
            <summary>
            触发请求保存配置事件
            </summary>
            <param name="e">事件参数</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.LoadConfig``1">
            <summary>
            加载配置
            </summary>
            <typeparam name="T">配置类型</typeparam>
            <returns>加载的配置</returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase.SaveConfig">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.ProviderBase`1">
            <summary>
            提供的服务基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:FSLib.IPMessager.Services.ProviderBase`1.ProviderConfig">
            <summary>
            配置（已重载）
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ProviderBase`1.LoadConfig">
            <summary>
            加载配置（已重载）
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.RemoveLoopBackMessage">
            <summary>
            本地消息回发过滤插件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.RemoveLoopBackMessage.Startup">
            <summary>
            插件启动(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.RemoveLoopBackMessage.ShutDown">
            <summary>
            插件卸载(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.RemoveLoopBackMessage.PluginIcon">
            <summary>
            插件图标
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.RemoveLoopBackMessage.SupportLoad">
            <summary>
            是否支持中途加载(已重载)
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.RemoveLoopBackMessage.SupportUnload">
            <summary>
            是否支持中途卸载(已重载)
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.RemoveLoopBackMessage.CheckCanLoad(System.Boolean)">
            <summary>
            检查是否可以加载(已重载)
            </summary>
            <param name="isFirstCall">是否是飞鸽传书初始化时候的加载</param>
            <returns></returns>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceAttribute">
            <summary>
            服务提供标记
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建 ServiceAttribute class 的新实例
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceAttribute.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            创建 ServiceAttribute class 的新实例
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceAttribute.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceConfigEventArgs">
            <summary>
            配置相关事件
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceConfigEventArgs.ConfigObject">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceConfigEventArgs.IsHandled">
            <summary>
            是否已经处理
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceConfigEventArgs.Type">
            <summary>
            配置类型
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceConfigEventArgs.#ctor">
            <summary>
            Initializes a new instance of the ConfigEventArgs class.
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceDescription">
            <summary>
            插件信息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceDescription.#ctor">
            <summary>
            创建 ServiceDescription class 的新实例
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceDescription.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建 ServiceAttribute class 的新实例
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceDescription.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            创建 ServiceAttribute class 的新实例
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceDescription.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceDescription.Contact">
            <summary>
            联系方式
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceDescription.Name">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceDescription.CopyRight">
            <summary>
            版权标记
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceDescription.Description">
            <summary>
            功能描述
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceDescription.DefaultEnabled">
            <summary>
            是否默认开启
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceInfo">
            <summary>
            插件提供信息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.#ctor">
            <summary>
            Initializes a new instance of the ServiceInfo class.
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.Assembly">
            <summary>
            插件所在程序集
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.TypeName">
            <summary>
            类别名
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.ConstructorInfo">
            <summary>
            构造器
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.ServiceProvider">
            <summary>
            实例对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.ServiceDescription">
            <summary>
            服务信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Services.ServiceInfo.State">
            <summary>
            服务状态
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.Load(FSLib.IPMessager.IPMClient)">
            <summary>
            初始化加载
            </summary>
            <param name="client">绑定的客户端</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.Load(FSLib.IPMessager.IPMClient,System.Boolean)">
            <summary>
            初始化加载
            </summary>
            <param name="client">绑定的客户端</param>
            <param name="isInitializingCall">是否是初始化加载</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.EnsureLoadAssembly">
            <summary>
            加载程序集信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.CreateProviderInstance">
            <summary>
            创建实例对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.InitialzingServiceProvider(FSLib.IPMessager.IPMClient)">
            <summary>
            初始化指定插件
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.LoadService">
            <summary>
            加载指定插件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.LoadService(System.Boolean)">
            <summary>
            加载指定插件
            </summary>
            <param name="onloadCall">是否是飞鸽传书初始化时候的请求</param>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.ShutDown">
            <summary>
            卸载插件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceInfo.LocateAssemblyPath(System.String)">
            <summary>
            确定程序集路径
            </summary>
            <param name="dllName">程序集名称</param>
            <returns>存在的路径.如果找不到,则返回null</returns>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceList">
            <summary>
            服务集合
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceList.ProviderExecute(System.Action{FSLib.IPMessager.Services.IServiceProvider})">
            <summary>
            对集合执行操作
            </summary>
            <param name="action">要执行的函数</param>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceManager">
            <summary>
            插件服务管理
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceManager.InnerServiceTypeList">
            <summary>
            内置的插件类名映射字典
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceManager.GetServicesInAssembly(System.String)">
            <summary>
            通过文件路径来查找所有服务
            </summary>
            <param name="assemblyPath"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceManager.GetServicesInAssembly(System.Reflection.Assembly)">
            <summary>
            查找指定程序集中所有的服务类
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceManager.GetServicesInAssembly">
            <summary>
            获得内置的插件
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Services.ServiceManager.GetServices(System.String[])">
            <summary>
            在指定的路径中查找服务提供者
            </summary>
            <param name="loaderPath">文件夹列表</param>
            <returns>查找的结果</returns>
        </member>
        <member name="T:FSLib.IPMessager.Services.ServiceState">
            <summary>
            服务运行状态
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.NotInstalled">
            <summary>
            未安装
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.Running">
            <summary>
            正在运行
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.Disabled">
            <summary>
            已禁用
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.LoadingError">
            <summary>
            加载错误
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.UnInitialized">
            <summary>
            未初始化
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.Unload">
            <summary>
            已卸载
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Services.ServiceState.TypeLoaded">
            <summary>
            类型已加载,但是未初始化
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts">
            <summary>
            一些常量的约定
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Define.Consts.#ctor">
            <summary>
            不允许创建对象
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Define.Consts.GetMsgCommandNum(System.UInt64)">
            <summary>
            获得数字代表的命令操作
            </summary>
            <param name="command"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Define.Consts.GetMsgCommandOption(System.UInt64)">
            <summary>
            获得数字代表的选项
            </summary>
            <param name="command">命令编码</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.DefaultPort">
            <summary>
            通信使用的默认端口
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.VersionNumber">
            <summary>
            版本编号,此处固定为1,为了保证与飞鸽兼容。
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.FileList_Separaror">
            <summary>
            文件列表分割符
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.HostList_Separator">
            <summary>
            主机列表分隔符
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.HostList_Dummy">
            <summary>
            HostList_Dummy
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.MAX_UDP_PACKAGE_LENGTH">
            <summary>
            UDP包最大的长度
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Commands">
            <summary>
            IPMessager的命令,32位中的低八位
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.NoOperaiton">
            <summary>
            无操作
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.Br_Entry">
            <summary>
            进入服务,新用户上线
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.Br_Exit">
            <summary>
            离开服务,新用户离开服务
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.AnsEntry">
            <summary>
            已经接收新用户信息
            这个提示信息将会在发送了IPMSG_BR_ENTRY后由收到信息的客户端返回
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.Br_Absence">
            <summary>
            改变离开状态
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.SendMsg">
            <summary>
            发送信息,指示发表的内容是发送信息
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.RecvMsg">
            <summary>
            信息确认
            这个将会确认已经接收到新信息,如果没有在指定时间内接收到,则判断为信息发送失败.
            返回时将会返回原始的数据包编号
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.ReadMsg">
            <summary>
            信息是加密的(带有[Secret]标志位),则发送此命令要求阅读信息
            返回原始包号码
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.DelMsg">
            <summary>
            删除信息
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.AnsReadMsg">
            <summary>
            信息确认(封装,打开提醒)
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.GetInfo">
            <summary>
            获得客户端使用的版本编号
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.SendInfo">
            <summary>
            正在发送的是客户端的版本编号
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.GetAbsenceInfo">
            <summary>
            获得离开状态
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.SendAbsenceInfo">
            <summary>
            正在发送的是当前用户的离开状态
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.GetPubKey">
            <summary>
            获得RSA公钥
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.AnsPubKey">
            <summary>
            发送RSA公钥
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.Br_Entry_Forward">
            <summary>
            转发的进入主机消息
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.Br_Exit_Forward">
            <summary>
            转发的主机退出信息
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Commands.Ex_PackageRecevied">
            <summary>
            扩展-消息包已经收到
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_All_Option">
            <summary>
            供所有命令用的选项
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_All_Option.Absence">
            *  option for all command  */
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_All_Option.NewFileAttach">
            <summary>
            新版本的支持断点续传的文件传输模式 【0x20000000UL】
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_All_Option.RequireReceiveCheck">
            <summary>
            要求收到的时候给与回应
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_All_Option.EnableNewDataContract">
            <summary>
            启用新版本协议
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_All_Option.BinaryMessage">
            <summary>
            是二进制消息，信息包含此消息位时，不会解析为字符串
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_Send_Option">
            <summary>
            供信息命令用的选项
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_Send_Option.SendCheck">
            *  option for send command  */
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_Send_Option.Content_Html">
            <summary>
            HTML格式信息
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_Send_Option.Content_RTF">
            <summary>
            RTF格式信息
            </summary>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_Send_Option.Content_Unicode">
            <summary>
            Unicode格式文本
            </summary>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_Encrpy_Option">
            <summary>
            供加密命令用的选项
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_Encrpy_Option.RSA_512">
            * encryption flags for encrypt command */
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_Compat_Option">
            <summary>
            compatibilty for Win beta version
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_FileType_Option">
            <summary>
            file types for fileattach command
            文件类型标志
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_FileAttr_Option">
            <summary>
            file attribute options for fileattach command
            文件属性
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.Define.Consts.Cmd_FileAttr_Option.Read_Only">
            * file attribute options for fileattach command */
        </member>
        <member name="T:FSLib.IPMessager.Define.Consts.Cmd_ExtFileAttr_Option">
            <summary>
            extend attribute types for fileattach command
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Define.Consts.Check(System.UInt64,System.UInt64)">
            <summary>
            检查选项是否存在
            </summary>
            <param name="orgData">组合值</param>
            <param name="toCheck">选项代码</param>
            <returns></returns>
            <remarks>组合值是用 选项代码 用 OR 的方式组合出来的,这个函数用于检测组合值是否包含了选项代码</remarks>
        </member>
        <member name="M:FSLib.IPMessager.Define.Consts.Check(System.UInt64,FSLib.IPMessager.Define.Consts.Cmd_All_Option)">
            <summary>
            检查选项是否存在
            </summary>
            <param name="orgData">组合值</param>
            <param name="toCheck">选项代码</param>
            <returns></returns>
            <remarks>组合值是用 选项代码 用 OR 的方式组合出来的,这个函数用于检测组合值是否包含了选项代码</remarks>
        </member>
        <member name="M:FSLib.IPMessager.Define.Consts.Check(System.UInt64,FSLib.IPMessager.Define.Consts.Cmd_Send_Option)">
            <summary>
            检查选项是否存在
            </summary>
            <param name="orgData">组合值</param>
            <param name="toCheck">选项代码</param>
            <returns></returns>
            <remarks>组合值是用 选项代码 用 OR 的方式组合出来的,这个函数用于检测组合值是否包含了选项代码</remarks>
        </member>
        <member name="T:FSLib.IPMessager.Helper">
            <summary>
            结构的定义,类的定义
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:FSLib.IPMessager.Helper.HostSubEqualityCompare">
            <summary>
            辅助类，用于比较两个IP是否在同一个IP段
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.Helper.HostSubEqualityCompare.StaticObj">
            <summary>
            单件模式对象
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Helper.HostSubEqualityCompare.#cctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.Helper.HostSubEqualityCompare.Equals(FSLib.IPMessager.Entity.Host,FSLib.IPMessager.Entity.Host)">
            <summary>
            是否相等？
            </summary>
            <param name="x">对象1</param>
            <param name="y">对象2</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.HostSubEqualityCompare.GetHashCode(FSLib.IPMessager.Entity.Host)">
            <summary>
            获得HashCode
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IsSameIPSectionAS(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            比较两个IP地址是否是同一个IP段
            </summary>
            <param name="addr1">要比较的IP地址1</param>
            <param name="addr2">要比较的IP地址2</param>
            <returns>true为相同,false为不同</returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IsSameIPAs(System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            比较两个IP地址是否是同一个IP
            </summary>
            <param name="addr1">要比较的IP地址1</param>
            <param name="addr2">要比较的IP地址2</param>
            <returns>true为相同,false为不同</returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IPGen(System.Net.IPAddress,System.Boolean)">
            <summary>
            编码IP
            </summary>
            <param name="ip"></param>
            <param name="calcAll"></param>
            <returns><see cref="T:System.Int32"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IpDisGen(System.UInt32)">
            <summary>
            反编码IP
            </summary>
            <param name="ip"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IsSameIPBlock(System.UInt32,System.UInt32)">
            <summary>
            判断两个IP是否属于相同的IP段
            </summary>
            <param name="ip1"></param>
            <param name="ip2"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IsInIPBlock(System.UInt32,System.UInt32)">
            <summary>
            判断一个IP地址是否属于IP段中的
            </summary>
            <param name="ip1">IP地址</param>
            <param name="ipd">IP段</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Helper.GetLocalAddresses">
            <summary>
            获得本地IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.IPGen(System.Net.IPAddress)">
            <summary>
            编码IP(IP地址-数字)
            </summary>
            <param name="ip"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.Helper.TryParseToInt(System.String,System.Int32)">
            <summary>
            尝试将字符串解析为数字
            </summary>
            <param name="val">字符串</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.TryParseToInt(System.String,System.UInt64)">
            <summary>
            尝试将字符串解析为数字
            </summary>
            <param name="val">字符串</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.ConvertToBytes(System.String)">
            <summary>
            转换一组字符串为字节
            </summary>
            <param name="val">字符串，长度必须为2的整数倍</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.ConvertToBytes(System.String,System.Int32,System.Int32)">
            <summary>
            转换一组字符串为字节
            </summary>
            <param name="val">字符串，长度必须为2的整数倍</param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.ConvertToString(System.Byte[])">
            <summary>
            将字节数组转换为字符串
            </summary>
            <param name="buffer">数组</param>
            <returns></returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.BuildTaskList(System.Collections.Generic.Dictionary{System.String,System.Int64})">
            <summary>
            根据任务大小信息创建任务列
            </summary>
            <param name="sizeList">尺寸大小定义</param>
            <returns>创建的列表</returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.BuildTaskMessage(FSLib.IPMessager.Entity.FileTaskItem[])">
            <summary>
            根据任务列表创建扩展信息
            </summary>
            <param name="taskList">任务列表</param>
            <returns>任务信息</returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.ToSizeDesc(System.UInt64)">
            <summary>
            转换为尺寸显示方式
            </summary>
            <param name="size">大小</param>
            <returns>尺寸显示方式</returns>
        </member>
        <member name="M:FSLib.IPMessager.Helper.ToSizeDesc(System.Int64)">
            <summary>
            转换为尺寸显示方式
            </summary>
            <param name="size">大小</param>
            <returns>尺寸显示方式</returns>
        </member>
        <member name="T:FSLib.IPMessager.IPMClient">
            <summary>
            FSLib.IPMessager 的客户端对象
            <para>这是核心的飞鸽传书.Net对象，通常来说，所有的操作都会通过这个对象内部封装的对象来执行。在绝大多数情况下，应该只使用本对象来初始化整个飞鸽传书.Net网络客户端。</para>
            <para>本对象内部封装了 UDP协议实现、TCP协议实现、文件传输管理、命令解析执行、在线列表维护、插件 等对象的实例。</para>
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.IPMClient.RootPath">
            <summary>
            Bin文件所在基础路径
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.LocalAddresses">
            <summary>
            本地IP地址
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.#ctor(System.Int32,System.String,System.String,System.Net.IPAddress)">
            <summary>
            创建一个新的客户端
            </summary>
            <param name="port">使用的端口</param>
            <param name="username">昵称</param>
            <param name="userGroup">用户组</param>
            <param name="ip">要绑定到的IP地址</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.#ctor">
            <summary>
            使用默认参数构建一个新的客户端
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.#ctor(System.Int32)">
            <summary>
            指定创建的端口
            </summary>
            <param name="port">端口</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.#ctor(System.Int32,System.Net.IPAddress)">
            <summary>
            指定创建的端口和IP的对象
            </summary>
            <param name="port">端口</param>
            <param name="ip">要绑定到的IP地址</param>
            <remarks></remarks>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.#ctor(FSLib.IPMessager.Entity.Config)">
            <summary>
            构造函数
            </summary>
            <param name="cfg">要使用的配置</param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.Create(System.String)">
            <summary>
            使用配置的XML文件创建对象
            </summary>
            <param name="configXml">配置的XML内容</param>
            <returns></returns>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.ThreadContext">
            <summary>
            获得创建客户端时所使用的线程上下文
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.Config">
            <summary>
            返回当前的配置对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.MessageClient">
            <summary>
            UDP文本信息网络层对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.MessageProxy">
            <summary>
            文本信息翻译层对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.OnlineHost">
            <summary>
            在线主机维护列表
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.Host">
            <summary>
            代表自己的主机信息
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.Commander">
            <summary>
            命令解释执行对象
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.FileTaskManager">
            <summary>
            文件传输管理
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.FileTaskModule">
            <summary>
            文件传输管理
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.ServiceList">
            <summary>
            是否启用内部的IP过滤机制
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.IsInitialized">
            <summary>
            返回是否初始化成功
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.Debugger">
            <summary>
            调试器对象
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.Initialize(FSLib.IPMessager.Entity.Config)">
            <summary>
            初始化
            </summary>
            <param name="cfg">初始化使用的配置</param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.InitializeServiceProvider">
            <summary>
            初始化服务插件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.Online">
            <summary>
            发送在线讯号,通知网段所有主机本机已经在线
            </summary>
            <remarks>
            这里的通知信号包括了两个部分，
            一是通过广播消息的格式发送的，意味着这只能通知同网段的主机。
            二是通过点对点发送的，发送的内容包含在 <see cref="P:FSLib.IPMessager.Entity.Config.KeepedHostList"/> 列表中的主机
            </remarks>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.OffLine">
             <summary>
             离线讯号,通知网段主机本机离线并关闭网络连接
             </summary>
             <remarks>
             这里的通知信号包括了两个部分，
             一是通过广播消息的格式发送的，意味着这只能通知同网段的主机。
             二是通过点对点发送的，发送的内容包含在 <see cref="P:FSLib.IPMessager.Entity.Config.KeepedHostList"/> 列表中的主机
            </remarks>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.ChangeAbsenceMode(System.Boolean,System.String)">
            <summary>
            更改离开模式
            <para>要改变离开模式（离开或在线），通过调用这个函数来实现。</para>
            <para>值得注意的是，对于更改昵称、组别等信息，也是通过这个函数来实现更新的。</para>
            </summary>
            <param name="inAbsenceMode">是否是离开状态</param>
            <param name="message">离开状态信息</param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.PerformSendFile(FSLib.IPMessager.Entity.FileTaskItem[],System.String,System.Boolean,System.Boolean,FSLib.IPMessager.Entity.Host)">
            <summary>
            向用户发送文件
            </summary>
            <param name="taskItem">文件列表</param>
            <param name="textMessage">附加的文本信息</param>
            <param name="isRtf">附加的文本信息是RTF格式</param>
            <param name="isHtml">附加的文本信息是HTML格式</param>
            <param name="remoteHost">远程主机</param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.IsInnerServiceEnabled(FSLib.IPMessager.Services.InnerService)">
            <summary>
            检测指定的插件服务是否处于运行状态
            <seealso cref="T:FSLib.IPMessager.Services.InnerService"/>
            </summary>
            <param name="service">内置插件服务类型，这里是 <see cref="T:FSLib.IPMessager.Services.InnerService"/> 的枚举类型</param>
            <returns>检查结果,如果正常加载则返回true,否则返回 false</returns>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.GetServiceState(FSLib.IPMessager.Services.InnerService)">
            <summary>
            检测指定的插件服务运行状态
            </summary>
            <param name="service">内置插件服务类型</param>
            <returns>检查结果</returns>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.GetServiceState(System.String)">
            <summary>
            检测指定的插件服务运行状态
            </summary>
            <param name="serviceTypeName">插件名称</param>
            <returns>检查结果</returns>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.Dispose">
            <summary>
            关闭网络对象
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:FSLib.IPMessager.IPMClient.SynchronizationContext">
            <summary>
            线程同步上下文
            </summary>
        </member>
        <member name="P:FSLib.IPMessager.IPMClient.NeedPostMessage">
            <summary>
            返回是否需要提交线程同步信息
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.SendSynchronizeMessage(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            提交同步消息
            </summary>
            <param name="call">调用的委托</param>
            <param name="arg">参数</param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.SendASynchronizeMessage(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            提交异步消息
            </summary>
            <param name="call">调用的委托</param>
            <param name="arg">参数</param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.InitializeEvents">
            <summary>
            初始化事件
            </summary>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.Commander_TextMessageReceived(System.Object,FSLib.IPMessager.Entity.MessageEventArgs)">
            <summary>
            预处理信息，检测是否有文件请求，有就处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FSLib.IPMessager.IPMClient.GetDefaultConfig(System.String[])">
            <summary>
            生成默认的设置
            </summary>
            <param name="addinPath">默认扫描插件的目录</param>
            <returns></returns>
        </member>
    </members>
</doc>
